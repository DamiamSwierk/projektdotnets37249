// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projekt.Models;

#nullable disable

namespace projekt.Migrations
{
    [DbContext(typeof(prkontekt))]
    partial class prkontektModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FisherySpecie", b =>
                {
                    b.Property<int>("GatunekId")
                        .HasColumnType("int");

                    b.Property<int>("ZbiornikId")
                        .HasColumnType("int");

                    b.HasKey("GatunekId", "ZbiornikId");

                    b.HasIndex("ZbiornikId");

                    b.ToTable("FisherySpecie");
                });

            modelBuilder.Entity("projekt.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("projekt.Models.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Data_z")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GatunekId")
                        .HasColumnType("int");

                    b.Property<int?>("Rozmiar")
                        .HasColumnType("int");

                    b.Property<float?>("Waga")
                        .HasColumnType("real");

                    b.Property<int?>("ZbiornikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GatunekId");

                    b.HasIndex("ZbiornikId");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("projekt.Models.Fishery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OkregId")
                        .HasColumnType("int");

                    b.Property<string>("nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OkregId");

                    b.ToTable("Fisheries");
                });

            modelBuilder.Entity("projekt.Models.Specie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gatuenk")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("FisherySpecie", b =>
                {
                    b.HasOne("projekt.Models.Specie", null)
                        .WithMany()
                        .HasForeignKey("GatunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projekt.Models.Fishery", null)
                        .WithMany()
                        .HasForeignKey("ZbiornikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projekt.Models.Fish", b =>
                {
                    b.HasOne("projekt.Models.Specie", "Gatunek")
                        .WithMany("Ryby")
                        .HasForeignKey("GatunekId");

                    b.HasOne("projekt.Models.Fishery", "Zbiornik")
                        .WithMany("Ryby")
                        .HasForeignKey("ZbiornikId");

                    b.Navigation("Gatunek");

                    b.Navigation("Zbiornik");
                });

            modelBuilder.Entity("projekt.Models.Fishery", b =>
                {
                    b.HasOne("projekt.Models.District", "Okreg")
                        .WithMany("Zbiornik")
                        .HasForeignKey("OkregId");

                    b.Navigation("Okreg");
                });

            modelBuilder.Entity("projekt.Models.District", b =>
                {
                    b.Navigation("Zbiornik");
                });

            modelBuilder.Entity("projekt.Models.Fishery", b =>
                {
                    b.Navigation("Ryby");
                });

            modelBuilder.Entity("projekt.Models.Specie", b =>
                {
                    b.Navigation("Ryby");
                });
#pragma warning restore 612, 618
        }
    }
}
